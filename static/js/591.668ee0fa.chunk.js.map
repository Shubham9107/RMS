{"version":3,"file":"static/js/591.668ee0fa.chunk.js","mappings":"iMAGA,MAIA,E,QAJYA,EAAMC,OAAO,CACrBC,QAAQ,wCCACC,EAAUC,UACnB,IAEA,aADqBC,EAAIC,IAAI,gBACbC,IAChB,CACA,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKC,EAAgBP,UACxB,IAED,aADsBC,EAAIC,IAAI,eAAeM,IAC7BL,IACZ,CACJ,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKG,EAAmBT,UAC5B,IAGA,aAFqBC,EAAIC,IAAI,iCACTC,KAAKO,QAAOP,GAAMA,EAAKQ,kBAAoBC,GAE/D,CACA,MAAMR,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKO,EAAoBb,UAC7B,IAEA,aADqBC,EAAIC,IAAI,8BACbC,IAChB,CACA,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKQ,EAAcd,UAAmB,IAAb,GAACQ,EAAE,KAACL,GAAKY,EACtC,IAKI,aAJiBd,EAAIe,MAAO,eAAeR,EAAIL,EAC/C,CAACc,QAAQ,CACL,OAAS,mBACT,eAAe,uBACHd,IACpB,CACA,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBAChB,E,2NChDJ,MA2JA,EA3JkBY,KAChB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GACxBC,GAASC,EAAAA,EAAAA,OACT,SAACC,EAAQ,aAACC,EAAcC,WAAU,OAACC,KAASC,EAAAA,EAAAA,MAE5CC,GAAcC,EAAAA,EAAAA,OACd,UAAEC,EAAS,KAAE5B,IAAQ6B,EAAAA,EAAAA,GAAS,CAClCC,SAAU,CAAC,WACXC,QAASnC,EAAAA,MAGHoC,YAAaC,IAAuBC,EAAAA,EAAAA,GAAY,CACtDC,WAAYxB,EAAAA,GACZyB,UAAWA,KACTV,EAAYW,kBAAkB,CAAC,YAC/BnC,EAAAA,GAAMoC,QAAQ,eAAe,KAIzBN,YAAaO,IAAuBL,EAAAA,EAAAA,GAAY,CACtDC,WAAY7B,EAAAA,GACZ8B,UAAYpC,IACV0B,EAAYc,eAAe,CAAC,WAAWxC,EAAK,IAuC1CyC,EAAOzC,GAAQ,GACrB,GAAI4B,EAAW,OAAOc,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAM7B,OACED,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,MAAA,QAAMC,OAAO,GAAGC,OAAO,OAAOC,SAAU3B,GA5C5BtB,IAEd,GAAGgB,EAAO,CAGR,IAAIkC,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAI9C,MAAMC,EAAW,CACfC,YAAY,CACVC,MAJU,KAAOC,KAAKC,SAASC,SAAS,IAAIN,MAAM,GAKlDO,MAAM5D,EAAK6D,MACXC,KAAK9D,EAAK8D,KACVC,MAAM/D,EAAK+D,MACXC,OAAOhE,EAAKgE,OACZC,QAAQjE,EAAKkE,QACbC,KAAKnE,EAAKmE,KACV1D,MAAMT,EAAKS,MACX2D,OAAOlB,GAETmB,OAAO,UAGTpC,EAAmB,CAAC5B,GAAGL,EAAK6D,MAAM7D,KAAKsD,IACvCnC,EAAS,UACX,MAGEjB,EAAAA,GAAMoC,QAAQ,aACdnB,EAAS,SACX,IAaiE0B,SAAA,EAE7DH,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,IACNjD,EAAS,OAAO,CAACkD,SAAS,wBAC9BC,KAAK,OAAOC,MAAM,OAAOC,MAAM,UAAUC,aAAa,OAAOxE,QAAOqB,EAAOsC,KAAoBc,QAAQ,cAEvGlC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,IACNjD,EAAS,QAAQ,CAACkD,SAAS,yBAC/BC,KAAK,QAAQC,MAAM,QAAQE,aAAa,OAAOxE,QAAOqB,EAAOuC,MAAqBW,MAAM,UAAUE,QAAQ,cAE1GlC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,IACNjD,EAAS,SAAS,CAACkD,SAAS,wBAChCM,UAAU,CAACC,MAAM,GAAGC,QAAQ,yBAC5BC,UAAU,CAACF,MAAM,GAAGC,QAAQ,2BAC5BP,KAAK,SAASG,aAAa,OAAOxE,QAAOqB,EAAOwC,OAAsBS,MAAM,SAASC,MAAM,UAAUE,QAAQ,cAE7GlC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,IACNjD,EAAS,UAAU,CAACkD,SAAS,4BAA6BU,QAAUC,GAAIA,EAAEC,OAAOX,KAAK,OAC1FA,KAAK,OAAOG,aAAa,OAAQxE,QAAOqB,EAAO0C,QAAuBO,MAAM,WAAWC,MAAM,UAAUE,QAAQ,cAE/G9B,EAAAA,EAAAA,MAACsC,EAAAA,EAAW,CAACC,GAAI,CAACC,MAAM,SAASzC,SAAA,EACjCH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACb,MAAM,UAAUrE,GAAG,aAAYwC,SAAC,UAC5CC,EAAAA,EAAAA,MAAC0C,EAAAA,EAAM,IACHnE,EAAS,OAAO,CAACkD,SAAS,wBAC5BkB,QAAQ,aACRhB,MAAM,OACNtE,QAAOqB,EAAO2C,KACdO,MAAM,UACNgB,aAAa,GAAE7C,SAAA,EAEbH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACC,UAAQ,EAACd,MAAM,MAC3BpC,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,eAAcjC,SAAC,mBAC/BH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,gBAAejC,SAAC,mBAChCH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,eAAcjC,SAAC,mBAC/BH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,cAAajC,SAAC,mBAC9BH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,cAAajC,SAAC,mBAC9BH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,cAAajC,SAAC,yBAIhCC,EAAAA,EAAAA,MAACsC,EAAAA,EAAW,CAACC,GAAI,CAACC,MAAM,SAASzC,SAAA,EACjCH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACb,MAAM,UAAUrE,GAAG,cAAawC,SAAC,WAC7CC,EAAAA,EAAAA,MAAC0C,EAAAA,EAAM,IACHnE,EAAS,QAAQ,CAACkD,SAAS,yBAC7BkB,QAAQ,cACRhB,MAAM,QACNtE,QAAOqB,EAAOf,MACdiE,MAAM,UACNmB,SAtDR,SAA0BX,GACxB3C,EAAmB2C,EAAEC,OAAOL,MAC9B,EAqDQY,aAAa,GAAE7C,SAAA,EAEfH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACC,UAAQ,EAACd,MAAM,MACzBpC,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,IAAGjC,SAAC,cACpBH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,IAAGjC,SAAC,cACpBH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,IAAGjC,SAAC,cACpBH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,IAAGjC,SAAC,cACpBH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACb,MAAM,IAAGjC,SAAC,oBAKtBC,EAAAA,EAAAA,MAACsC,EAAAA,EAAW,CAACC,GAAI,CAACC,MAAM,SAASzC,SAAA,EACjCH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACb,MAAM,UAAUrE,GAAG,cAAawC,SAAC,WAC7CC,EAAAA,EAAAA,MAAC0C,EAAAA,EAAM,IACHnE,EAAS,QAAQ,CAACkD,SAAS,yBAC7BkB,QAAQ,cACRhB,MAAM,QACNtE,QAAOqB,EAAOqC,MACda,MAAM,UACNgB,aAAa,GAAE7C,SAAA,EAEbH,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAACC,UAAQ,EAACd,MAAM,KAEvBrC,GAAUA,EAAOqD,KAAI,CAACjC,EAAMkC,KAAQrD,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAAab,MAAOjB,EAAMmC,SAASnD,SAAEgB,EAAMmC,UAArCD,YAKzDrD,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CAACzB,KAAK,SAASI,QAAQ,YAAW/B,SAAC,uBAGxC,E,wBC/JV,MAWA,EAXoBqD,KAEhBpD,EAAAA,EAAAA,MAACqD,EAAAA,EAAG,CAACvD,UAAU,cAAaC,SAAA,EAC1BH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACxD,UAAU,cAAcgC,QAAQ,KAAI/B,SAAC,aACjDH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAAExD,UAAU,eAAegC,QAAQ,KAAI/B,SAAC,gCAEnDH,EAAAA,EAAAA,KAAC3B,EAAS,M,mJCYHsF,GAAAC,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAAG,EAAA,IAAAH,QAAAI,EAAA,IAAAC,QAAN,cAKGC,EAAAA,EAWRC,WAAAA,CACEC,EACAC,GAEAC,SAAMC,EAAAA,EAAAA,GAAA,KAAAP,IAAAQ,EAAAA,EAAAA,GAAA,KAAAb,OAAA,IAAAa,EAAAA,EAAAA,GAAA,KAAAX,OARN,IAAAW,EAAAA,EAAAA,GAAA,KAAAV,OAAA,IAAAU,EAAAA,EAAAA,GAAA,KAAAT,OAAA,IAUAU,EAAAA,EAAAA,GAAAd,EAAAe,KAAeN,GACfM,KAAKC,WAAWN,GAChBK,KAAKE,eACLC,EAAAA,EAAAA,GAAAb,EAAAU,KAAAI,GAAAC,KAAAL,KACF,CAEUE,WAAAA,GACRF,KAAKM,OAASN,KAAKM,OAAOC,KAAKP,MAC/BA,KAAKQ,MAAQR,KAAKQ,MAAMD,KAAKP,KAC/B,CAEAC,UAAAA,CACEN,GACA,IAAAc,EACA,MAAMC,EAAcV,KAAKL,QAGzBK,KAAKL,SAAUgB,EAAAA,EAAAA,GAAA1B,EAAAe,MAAaY,uBAAuBjB,IAC9CkB,EAAAA,EAAAA,IAAoBb,KAAKL,QAASe,KACrCC,EAAAA,EAAAA,GAAA1B,EAAAe,MAAac,mBAAmBC,OAAO,CACrC5D,KAAM,yBACN6D,UAAAL,EAAAA,EAAAA,GAAAvB,EAAUY,MACViB,SAAUjB,OAKZ,OAAAU,QAAA,IAAAA,GAAAA,EAAaQ,aACblB,KAAKL,QAAQuB,cACbC,EAAAA,EAAAA,IAAQT,EAAYQ,gBAAiBC,EAAAA,EAAAA,IAAQnB,KAAKL,QAAQuB,aAE1DlB,KAAKQ,QAC4C,aAAxC,QAAAC,GAAAE,EAAAA,EAAAA,GAAAvB,EAAAY,aAAA,IAAAS,OAAA,EAAAA,EAAuBW,MAAMpE,UACtC2D,EAAAA,EAAAA,GAAAvB,EAAAY,MAAsBC,WAAWD,KAAKL,QAE1C,CAEU0B,aAAAA,GACkB,IAAAC,EAArBtB,KAAKuB,iBACR,QAAAD,GAAAX,EAAAA,EAAAA,GAAAvB,EAAAY,aAAA,IAAAsB,GAAAA,EAAuBE,eAAexB,MAE1C,CAEAyB,gBAAAA,CAAiB/F,IACfyE,EAAAA,EAAAA,GAAAb,EAAAU,KAAAI,GAAAC,KAAAL,OAEAG,EAAAA,EAAAA,GAAAb,EAAAU,KAAA0B,GAAArB,KAAAL,KAAatE,EACf,CAEAiG,gBAAAA,GAME,OAAAhB,EAAAA,EAAAA,GAAAxB,EAAOa,KACT,CAEAQ,KAAAA,GAAc,IAAAoB,EAGZ,QAAAA,GAAAjB,EAAAA,EAAAA,GAAAvB,EAAAY,aAAA,IAAA4B,GAAAA,EAAuBJ,eAAexB,OACtCD,EAAAA,EAAAA,GAAAX,EAAAY,UAAwB,IACxBG,EAAAA,EAAAA,GAAAb,EAAAU,KAAAI,GAAAC,KAAAL,OACAG,EAAAA,EAAAA,GAAAb,EAAAU,KAAA0B,GAAArB,KAAAL,KACF,CAEAM,MAAAA,CACEuB,EACAlC,GACgB,IAAAmC,EAWhB,OAVA/B,EAAAA,EAAAA,GAAAV,EAAAW,KAAsBL,GAEtB,QAAAmC,GAAAnB,EAAAA,EAAAA,GAAAvB,EAAAY,aAAA,IAAA8B,GAAAA,EAAuBN,eAAexB,OAEtCD,EAAAA,EAAAA,GAAAX,EAAAY,MAAwBW,EAAAA,EAAAA,GAAA1B,EAAAe,MACrBc,mBACAiB,OAAApB,EAAAA,EAAAA,GAAA1B,EAAMe,MAAcA,KAAKL,WAE5BgB,EAAAA,EAAAA,GAAAvB,EAAAY,MAAsBgC,YAAYhC,OAE3BW,EAAAA,EAAAA,GAAAvB,EAAAY,MAAsBiC,QAAQJ,EACvC,IA6CF,SAAAzB,IA3CwB,IAAA8B,EAAAC,EACpB,MAAMf,EACmB,QADnBc,EACJ,QADIC,GAAAxB,EAAAA,EAAAA,GAAAvB,EACJY,aAAA,IAAAmC,OAAA,EAAAA,EAAuBf,aAAA,IAAAc,EAAAA,GACvBE,EAAAA,EAAAA,MAEFrC,EAAAA,EAAAA,GAAAZ,EAAAa,KAAsB,IACjBoB,EACHiB,UAA4B,YAAjBjB,EAAMpE,OACjBsF,UAA4B,YAAjBlB,EAAMpE,OACjBuF,QAA0B,UAAjBnB,EAAMpE,OACfwF,OAAyB,SAAjBpB,EAAMpE,OACdsD,OAAQN,KAAKM,OACbE,MAAOR,KAAKQ,OAEhB,UAAAkB,EAEQhG,GACN+G,EAAAA,EAAcC,OAAM,KAElB,IAAI/B,EAAAA,EAAAA,GAAAtB,EAAAW,OAAuBA,KAAKuB,eAAgB,CAC9C,MAAMM,GAAYlB,EAAAA,EAAAA,GAAAxB,EAAAa,MAAoB6B,UAChCc,GAAUhC,EAAAA,EAAAA,GAAAxB,EAAAa,MAAoB2C,QAEJ,IAAAC,EAAAC,EAAAC,EAAAC,EAAhC,GAAqB,aAAjB,OAAArH,QAAA,IAAAA,OAAA,EAAAA,EAAQyB,MACU,QAApByF,GAAAC,GAAAlC,EAAAA,EAAAA,GAAAtB,EAAAW,OAAoBjF,iBAAA,IAAA6H,GAApBA,EAAAvC,KAAAwC,EAAgCnH,EAAO/C,KAAMkJ,EAAWc,GACpC,QAApBG,GAAAC,GAAApC,EAAAA,EAAAA,GAAAtB,EAAAW,OAAoBgD,iBAAA,IAAAF,GAApBA,EAAAzC,KAAA0C,EAAgCrH,EAAO/C,KAAM,KAAMkJ,EAAWc,QACzD,GAAqB,WAAjB,OAAAjH,QAAA,IAAAA,OAAA,EAAAA,EAAQyB,MAAkB,KAAA8F,EAAAC,EAAAC,EAAAC,EACf,QAApBH,GAAAC,GAAAvC,EAAAA,EAAAA,GAAAtB,EAAAW,OAAoBqD,eAAA,IAAAJ,GAApBA,EAAA5C,KAAA6C,EAA8BxH,EAAO5C,MAAO+I,EAAWc,GACnC,QAApBQ,GAAAC,GAAAzC,EAAAA,EAAAA,GAAAtB,EAAAW,OAAoBgD,iBAAA,IAAAG,GAApBA,EAAA9C,KAAA+C,OACE,EACA1H,EAAO5C,MACP+I,EACAc,EAEJ,CACF,CAGA3C,KAAKsD,UAAUC,SAASC,IACtBA,GAAA7C,EAAAA,EAAAA,GAAAxB,EAASa,MAAoB,GAC7B,GAEN,C,wBC3JK,SAASnF,EAMd8E,EACAtF,GAEA,MAAMqF,GAASpF,EAAAA,EAAAA,IAAeD,IAEvB4G,GAAkBwC,EAAAA,UACvB,IACE,IAAIzE,EACFU,EACAC,KAIA8D,EAAAA,WAAU,KACdxC,EAAShB,WAAWN,EAAQ,GAC3B,CAACsB,EAAUtB,IAEd,MAAM+D,EAAeD,EAAAA,qBACbA,EAAAA,aACHE,GACC1C,EAAS2C,UAAUnB,EAAAA,EAAcoB,WAAWF,KAC9C,CAAC1C,KAEH,IAAMA,EAASU,qBACf,IAAMV,EAASU,qBAGXrB,EAAemD,EAAAA,aAGnB,CAAC5B,EAAWiC,KACV7C,EAASX,OAAOuB,EAAWiC,GAAeC,MAAMC,EAAAA,EAAK,GAEvD,CAAC/C,IAGH,GACEyC,EAAO5K,QACPmL,EAAAA,EAAAA,GAAiBhD,EAAStB,QAAQuE,aAAc,CAACR,EAAO5K,QAExD,MAAM4K,EAAO5K,MAGf,MAAO,IAAK4K,EAAQpD,SAAQ3F,YAAa+I,EAAOpD,OAClD,C","sources":["API/api.js","API/Table.js","components/TableCard/TableCard.jsx","pages/BookingPage.jsx","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import axios from 'axios'\n\n//axios to creating BaseUrl\nconst api = axios.create({\n    baseURL:\"https://codx-json-server.vercel.app\",\n    });\n    \nexport default api;","import { toast } from 'react-toastify';\nimport api from './api'\n\n//getting All Table deta with get method\nexport const TableData=async()=>{\n    try{\n    const response=await api.get(\"/api/tables\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterById=async(id)=>\n{    try{\n    const response= await api.get(\"/api/tables/\"+id)\n    return response.data\n        }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByGuest=async(guest)=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Available\")\n    let Filter=response.data.filter(data=>data.seating_capacity >= guest)\n    return Filter\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByStatus=async()=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Booked\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//update the table Data\nexport const BookingUpdate=async({id,data})=>{\n    try{\n    const response=await api.patch((\"/api/tables/\"+id),data,\n        {headers:{\n            'Accept':'application/json',\n            'Content-Type':'application/json'}})\n        return response.data\n    }\n    catch(err){\n        toast.error(\"Somthing Wrong!\")\n    }\n    \n} \n\n    ","import React, { useContext } from 'react'\nimport {useForm} from 'react-hook-form'\nimport { Button,FormControl,InputLabel,MenuItem,Select,TextField} from '@mui/material'\nimport './booking.css'\nimport { useNavigate } from 'react-router-dom';\nimport { BookingUpdate,  TableData, TableFilterByGuest } from '../../API/Table'\nimport {Authenticate} from '../../Validate/AuthContext'\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\nimport Loader from '../Loading/Loading'\nimport { toast } from 'react-toastify'\n\nconst TableCard = () => {\n  const { IsAuth } = useContext(Authenticate);\n  const navigate=useNavigate()\n  const {register,handleSubmit, formState:{errors}}=useForm()\n  \n  const queryClient = useQueryClient();\n  const { isLoading, data} = useQuery({\n    queryKey: [\"booking\"],\n    queryFn: TableData,\n  });\n\n  const { mutateAsync: addbookingMutation } = useMutation({\n    mutationFn: BookingUpdate,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"booking\"]);\n      toast.success(\"Table Booked\");\n    },\n  });\n\n  const { mutateAsync: guestcountMutation } = useMutation({\n    mutationFn: TableFilterByGuest,\n    onSuccess: (data) => {\n      queryClient.setQueriesData([\"booking\"],data);\n    },\n  });\n\n  const onSubmit=(data)=>{\n    //checking authentication\n    if(IsAuth){\n      //calling Table Store to update booking\n      \n      let today = new Date().toISOString().slice(0, 10)\n      // Order ID Generate\n      var orderId = \"Ak\" + Math.random().toString(16).slice(2)\n\n      const OrderModel={\n        reservation:{\n          Order:orderId,\n          Table:data.table,\n          name:data.name,\n          email:data.email,\n          mobile:data.mobile,\n          checkIn:data.checkin,\n          time:data.time,\n          guest:data.guest,\n          booked:today\n        },\n        status:'Booked'\n      }\n\n      addbookingMutation({id:data.table,data:OrderModel})\n      navigate('/orders')\n    }\n    else {\n      //redirect login page\n      toast.success(\"Login Now\");\n      navigate('/login')\n    }\n    \n  }\n\n  const Tables=data || []\n  if (isLoading) return <Loader />;\n\n  function GuestCountChange(e){\n    guestcountMutation(e.target.value)\n  }\n \n  return (\n    <div className=\"BookingForm\">\n      <form action=\"\" method=\"post\" onSubmit={handleSubmit(onSubmit)}>\n\n        <TextField \n        {...register('name',{required:\"Name Field Required\"})} \n        type='text' label=\"Name\" color=\"success\" autoComplete='true' error={errors.name ? true :false} variant=\"outlined\" />\n\n        <TextField \n        {...register('email',{required:\"Email Field Required\"})} \n        type='email' label=\"Email\" autoComplete='true' error={errors.email ? true :false} color=\"success\" variant=\"outlined\" />\n        \n        <TextField \n        {...register('mobile',{required:\"Mobile Field Required\",\n        maxLength:{value:13,message:\"Maximun 13 Characters\"},\n        minLength:{value:10,message:\"Minimun 10 Characters\"}})} \n        type='number' autoComplete='true' error={errors.mobile ? true :false} label=\"Mobile\" color=\"success\" variant=\"outlined\" />\n\n        <TextField \n        {...register('checkin',{required:\"Check-in Field Required\"})} onFocus={(e)=>e.target.type='date'}\n        type='text' autoComplete='true'  error={errors.checkin ? true :false} label=\"Check-In\" color=\"success\" variant=\"outlined\" />\n\n        <FormControl sx={{width:'330px'}}>\n        <InputLabel color='success' id=\"time-label\">Time</InputLabel>\n        <Select\n        {...register('time',{required:\"time Field Required\"})} \n          labelId=\"time-label\"\n          label=\"Time\"\n          error={errors.time ? true :false} \n          color=\"success\"\n          defaultValue=''\n          >\n            <MenuItem disabled value=''></MenuItem>\n          <MenuItem value='8 AM - 10 AM'>08 AM - 10 AM</MenuItem>\n          <MenuItem value='10 AM - 12 PM'>10 AM - 12 PM</MenuItem>\n          <MenuItem value='12 PM - 2 PM'>12 PM - 02 PM</MenuItem>\n          <MenuItem value='2 PM - 4 PM'>02 PM - 04 PM</MenuItem>\n          <MenuItem value='4 PM - 6 PM'>04 PM - 06 PM</MenuItem>\n          <MenuItem value='6 PM - 8 PM'>06 PM - 08 PM</MenuItem>\n        </Select>\n        </FormControl>\n\n        <FormControl sx={{width:'330px'}}>\n        <InputLabel color='success' id=\"guest-label\">Guest</InputLabel>\n        <Select\n        {...register('guest',{required:\"guest Field Required\"})} \n          labelId=\"guest-label\"\n          label=\"Guest\"\n          error={errors.guest ? true :false} \n          color=\"success\"\n          onChange={GuestCountChange}\n          defaultValue=''\n          >\n          <MenuItem disabled value=''></MenuItem>\n          <MenuItem value='1'>1 Person</MenuItem>\n          <MenuItem value='2'>2 Person</MenuItem>\n          <MenuItem value='3'>3 Person</MenuItem>\n          <MenuItem value='4'>4 Person</MenuItem>\n          <MenuItem value='5'>5 Person</MenuItem>\n\n        </Select>\n        </FormControl>\n\n        <FormControl sx={{width:'330px'}}>\n        <InputLabel color='success' id=\"table-label\">Table</InputLabel>\n        <Select\n        {...register('table',{required:\"Table Field Required\"})} \n          labelId=\"table-label\"\n          label=\"Table\"\n          error={errors.table ? true :false} \n          color=\"success\"\n          defaultValue=''\n          >\n            <MenuItem disabled value=''></MenuItem>\n            {\n              Tables && Tables.map((table,index)=><MenuItem key={index} value={table.table_no}>{table.table_no}</MenuItem>)\n            }\n        </Select>\n        </FormControl>\n\n        <Button type='submit' variant=\"contained\">Book Table Now</Button>\n\n      </form>   \n    </div>\n  )\n}\n\nexport default TableCard","import React from 'react'\nimport TableCard from '../components/TableCard/TableCard'\nimport {Box, Typography } from '@mui/material'\nconst BookingPage = () => {\n  return (\n    <Box className='BookingPage'>\n      <Typography className='first-title' variant='h6'>Booking</Typography>\n      <Typography  className='second-title' variant='h4'>A Culinary Journey Awaits!</Typography>\n      {/* Table Form */}\n      <TableCard/>\n    </Box>\n  )\n}\n\nexport default BookingPage","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["axios","create","baseURL","TableData","async","api","get","data","err","toast","error","TableFilterById","id","TableFilterByGuest","filter","seating_capacity","guest","TableFilterByStatus","BookingUpdate","_ref","patch","headers","TableCard","IsAuth","useContext","Authenticate","navigate","useNavigate","register","handleSubmit","formState","errors","useForm","queryClient","useQueryClient","isLoading","useQuery","queryKey","queryFn","mutateAsync","addbookingMutation","useMutation","mutationFn","onSuccess","invalidateQueries","success","guestcountMutation","setQueriesData","Tables","_jsx","Loader","className","children","_jsxs","action","method","onSubmit","today","Date","toISOString","slice","OrderModel","reservation","Order","Math","random","toString","Table","table","name","email","mobile","checkIn","checkin","time","booked","status","TextField","required","type","label","color","autoComplete","variant","maxLength","value","message","minLength","onFocus","e","target","FormControl","sx","width","InputLabel","Select","labelId","defaultValue","MenuItem","disabled","onChange","map","index","table_no","Button","BookingPage","Box","Typography","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_Class_brand","WeakSet","Subscribable","constructor","client","options","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","this","setOptions","bindMethods","_assertClassBrand","_updateResult","call","mutate","bind","reset","_classPrivateFieldGet2","prevOptions","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","observer","mutationKey","hashKey","state","onUnsubscribe","_classPrivateFieldGet3","hasListeners","removeObserver","onMutationUpdate","_notify","getCurrentResult","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","_classPrivateFieldGet6","_classPrivateFieldGet7","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","onError","listeners","forEach","listener","React","result","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError"],"sourceRoot":""}