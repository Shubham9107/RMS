{"version":3,"file":"static/js/80.93de4bde.chunk.js","mappings":"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","sources":["API/api.js","API/Table.js","pages/OrderDetail.jsx","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import axios from 'axios'\n\n//axios to creating BaseUrl\nconst api = axios.create({\n    baseURL:\"https://codx-json-server.vercel.app\",\n    });\n    \nexport default api;","import { toast } from 'react-toastify';\nimport api from './api'\n\n//getting All Table deta with get method\nexport const TableData=async()=>{\n    try{\n    const response=await api.get(\"/api/tables\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterById=async(id)=>\n{    try{\n    const response= await api.get(\"/api/tables/\"+id)\n    return response.data\n        }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByGuest=async(guest)=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Available\")\n    let Filter=response.data.filter(data=>data.seating_capacity >= guest)\n    return Filter\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByStatus=async()=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Booked\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//update the table Data\nexport const BookingUpdate=async({id,data})=>{\n    try{\n    const response=await api.patch((\"/api/tables/\"+id),data,\n        {headers:{\n            'Accept':'application/json',\n            'Content-Type':'application/json'}})\n        return response.data\n    }\n    catch(err){\n        toast.error(\"Somthing Wrong!\")\n    }\n    \n} \n\n    ","import { Box, Button, Card,Typography } from '@mui/material'\nimport React  from 'react'\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport '../components/OrderCard/orderDetail.css'\nimport { BookingUpdate, TableFilterById } from '../API/Table';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport Loader from '../components/Loading/Loading'\nimport { toast } from 'react-toastify';\n\nconst OrderDetail = () => {\n  const navigate=useNavigate()\n\n  const queryClient = useQueryClient();\n\n    // url to getting Table Id\n    let { id } = useParams();\n  const { isLoading, data } = useQuery({\n    queryKey: [\"table-Details\"],\n    queryFn:()=> TableFilterById(id),\n  });\n\n  const { mutateAsync: deleteBookingMutation } = useMutation({\n    mutationFn: BookingUpdate,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"table\"]);\n      toast.error(\"Table Booking Cancel!\");\n    },\n  });\n\n  const onSubmit=(id)=>{\n    const data={reservation:{},status:\"Available\"}\n    // console.log(id,data)\n    deleteBookingMutation({id,data})\n\n    //navigate to booking Page\n    navigate('/orders')\n  }\n  return (\n    <Box className='OrderDetail' >\n      <Typography className='first-title' variant='h6'>Summary</Typography>\n      <Typography className='second-title' variant='h4'>Discover Our Flavorful Symphony!</Typography>\n      {\n        isLoading && <Loader/>\n      }\n      {\n        data ? <Card className='detail-card' variant='outlined'>\n        <Typography variant='h6' align='center' padding={1} component='div'>Booking Summary</Typography>\n        <Typography component='li'>Order : {data.reservation.Order}</Typography>\n        <Typography component='li'>Table : {data.table_no}</Typography>\n        <Typography component='p'>Name : {data.reservation.name}</Typography>\n        <Typography component='p'>Email : {data.reservation.email}</Typography>\n        <Typography component='p'>Mobile : {data.reservation.mobile}</Typography>\n        <Typography component='p'>Check-In : {data.reservation.checkIn}</Typography>\n        <Typography component='p'>Time : {data.reservation.time}</Typography>\n        <Typography component='p'>Guest : {data.reservation.guest}</Typography>\n        <Typography component='p'>Booked : {data.reservation.booked}</Typography>\n        <Typography component='p'>Status : {data.status}</Typography>\n        <Box sx={{display:'flex',alignItems:'center',padding:1,justifyContent:'end'}}>\n         <Button onClick={()=>onSubmit(data.id)} color='error' type='button' variant='contained'>Cancel Booking</Button>\n        </Box>\n        \n      </Card> : <Typography>No Items Found</Typography>\n      }\n      \n\n    </Box>\n  )\n}\n\nexport default OrderDetail","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["axios","create","baseURL","TableData","async","api","get","data","err","toast","error","TableFilterById","id","TableFilterByGuest","filter","seating_capacity","guest","TableFilterByStatus","BookingUpdate","_ref","patch","headers","OrderDetail","navigate","useNavigate","queryClient","useQueryClient","useParams","isLoading","useQuery","queryKey","queryFn","mutateAsync","deleteBookingMutation","useMutation","mutationFn","onSuccess","invalidateQueries","_jsxs","Box","className","children","_jsx","Typography","variant","Loader","Card","align","padding","component","reservation","Order","table_no","name","email","mobile","checkIn","time","booked","status","sx","display","alignItems","justifyContent","Button","onClick","onSubmit","color","type","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_Class_brand","WeakSet","Subscribable","constructor","client","options","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","this","setOptions","bindMethods","_assertClassBrand","_updateResult","call","mutate","bind","reset","_classPrivateFieldGet2","prevOptions","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","observer","mutationKey","hashKey","state","onUnsubscribe","_classPrivateFieldGet3","hasListeners","removeObserver","onMutationUpdate","action","_notify","getCurrentResult","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","_classPrivateFieldGet6","_classPrivateFieldGet7","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","onError","listeners","forEach","listener","React","result","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError"],"sourceRoot":""}