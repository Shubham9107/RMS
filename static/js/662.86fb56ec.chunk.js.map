{"version":3,"file":"static/js/662.86fb56ec.chunk.js","mappings":"iMAGA,MAIA,E,QAJYA,EAAMC,OAAO,CACrBC,QAAQ,wCCACC,EAAUC,UACnB,IAEA,aADqBC,EAAIC,IAAI,gBACbC,IAChB,CACA,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKC,EAAgBP,UACxB,IAED,aADsBC,EAAIC,IAAI,eAAeM,IAC7BL,IACZ,CACJ,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKG,EAAmBT,UAC5B,IAGA,aAFqBC,EAAIC,IAAI,iCACTC,KAAKO,QAAOP,GAAMA,EAAKQ,kBAAoBC,GAE/D,CACA,MAAMR,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKO,EAAoBb,UAC7B,IAEA,aADqBC,EAAIC,IAAI,8BACbC,IAChB,CACA,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBACZ,GAIKQ,EAAcd,UAAmB,IAAb,GAACQ,EAAE,KAACL,GAAKY,EACtC,IAKI,aAJiBd,EAAIe,MAAO,eAAeR,EAAIL,EAC/C,CAACc,QAAQ,CACL,OAAS,mBACT,eAAe,uBACHd,IACpB,CACA,MAAMC,GACFC,EAAAA,GAAMC,MAAM,kBAChB,E,yKClDJ,MAsCA,EAtCoBY,KAEhB,IAAI,GAAEV,IAAOW,EAAAA,EAAAA,KAEb,MAAM,UAAEC,EAAWjB,KAAKkB,IAAUC,EAAAA,EAAAA,GAAS,CACvCC,SAAU,CAAC,cACXC,QAAQA,KAAKjB,EAAAA,EAAAA,IAAgBC,KAGnC,OACEiB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,eAAcC,SAAA,EAC/BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACH,UAAU,cAAcI,QAAQ,KAAIH,SAAC,WACjDC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACH,UAAU,eAAeI,QAAQ,KAAIH,SAAC,qCAElDR,IAAaS,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAIhBX,GAAQI,EAAAA,EAAAA,MAACQ,EAAAA,EAAI,CAACF,QAAQ,WAAWJ,UAAU,oBAAmBC,SAAA,EAC9DC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACI,UAAU,MAAMC,MAAM,SAASC,QAAS,EAAGL,QAAQ,KAAIH,SAAC,oBACpEH,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACI,UAAU,IAAGN,SAAA,CAAC,cAAYP,EAAMgB,aAC5CZ,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACI,UAAU,IAAGN,SAAA,CAAC,gBAAcP,EAAMV,qBAC9Cc,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACI,UAAU,IAAGN,SAAA,CAAC,YAAUP,EAAMiB,WAC1Cb,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACI,UAAU,IAAGN,SAAA,CAAC,cAAYP,EAAMkB,YAAYC,MAAQ,UAG7C,cAAfnB,EAAMiB,SAAwBT,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACI,UAAU,MAAKN,UAACC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAG,WAAUd,UACzEC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACC,MAAM,QAAQb,QAAQ,WAAUH,SAAC,qBAIhDC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACe,GAAI,CAACC,UAAU,SAASF,MAAM,YAAYG,SAAS,OAAOX,QAAQ,UAAWF,UAAU,IAAGN,SAAC,2BAGpG,C","sources":["API/api.js","API/Table.js","pages/TableDetail.jsx"],"sourcesContent":["import axios from 'axios'\n\n//axios to creating BaseUrl\nconst api = axios.create({\n    baseURL:\"https://codx-json-server.vercel.app\",\n    });\n    \nexport default api;","import { toast } from 'react-toastify';\nimport api from './api'\n\n//getting All Table deta with get method\nexport const TableData=async()=>{\n    try{\n    const response=await api.get(\"/api/tables\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterById=async(id)=>\n{    try{\n    const response= await api.get(\"/api/tables/\"+id)\n    return response.data\n        }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByGuest=async(guest)=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Available\")\n    let Filter=response.data.filter(data=>data.seating_capacity >= guest)\n    return Filter\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByStatus=async()=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Booked\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//update the table Data\nexport const BookingUpdate=async({id,data})=>{\n    try{\n    const response=await api.patch((\"/api/tables/\"+id),data,\n        {headers:{\n            'Accept':'application/json',\n            'Content-Type':'application/json'}})\n        return response.data\n    }\n    catch(err){\n        toast.error(\"Somthing Wrong!\")\n    }\n    \n} \n\n    ","import { Button, Card, Container, Typography } from '@mui/material'\nimport React from 'react'\nimport {useParams} from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport '../components/TableLayout/tablelayout.css'\nimport { TableFilterById } from '../API/Table';\nimport { useQuery } from '@tanstack/react-query';\nimport Loader from '../components/Loading/Loading';\n\nconst TableDetail = () => {\n    // url to getting Table Id\n    let { id } = useParams();\n\n    const { isLoading, data:table } = useQuery({\n        queryKey: [\"table-Data\"],\n        queryFn:()=> TableFilterById(id),\n      });\n\n  return (\n    <Container className='Table-Detail'>\n        <Typography className='first-title' variant='h6'>Table</Typography>\n        <Typography className='second-title' variant='h4'>Discover Our Flavorful Symphony!</Typography>\n        {\n        isLoading && <Loader/>\n      }\n        {\n            // Filterd Data Mapping\n            table ? <Card variant='outlined' className='table-detail-card'>\n            <Typography component='div' align='center' padding={2} variant='h5'>Table Overview</Typography>\n            <Typography component='p'>Table No : {table.table_no}</Typography>\n            <Typography component='p'>Seat Count : {table.seating_capacity}</Typography>\n            <Typography component='p'>Status : {table.status}</Typography>\n            <Typography component='p'>Reserved : {table.reservation.name || \" NA \"}</Typography>\n            {\n                // checking Table is available or booked \n                table.status===\"Available\" && <Typography component='div'><Link to='/booking'>\n                    <Button color='error' variant='outlined'>Book Now</Button>\n                    </Link></Typography>\n            }\n        </Card>\n            :<Typography sx={{textAlign:'center',color:'lightgray',fontSize:'30px',padding:'40px 0'}} component='p'> No Tables Available</Typography>\n        }\n      \n    </Container>\n  )\n}\n\nexport default TableDetail"],"names":["axios","create","baseURL","TableData","async","api","get","data","err","toast","error","TableFilterById","id","TableFilterByGuest","filter","seating_capacity","guest","TableFilterByStatus","BookingUpdate","_ref","patch","headers","TableDetail","useParams","isLoading","table","useQuery","queryKey","queryFn","_jsxs","Container","className","children","_jsx","Typography","variant","Loader","Card","component","align","padding","table_no","status","reservation","name","Link","to","Button","color","sx","textAlign","fontSize"],"sourceRoot":""}